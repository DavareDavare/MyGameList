@page "/list"
@inject HttpClient client;
@inject NavigationManager NavManager
@inject IDialogService DialogService

<h3>Spiele in der Datenbank:</h3>
@if (gamesn == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="gamesn" @ref="_table" Hover="true" SortLabel="Sort By" Elevation="0" T="Game" MultiSelection="true" @bind-SelectedItems="selectedItems" OnRowClick="@OnRowClick" @bind-SelectOnRowClick="@_selectOnRowClick">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Game, object>(x=>x._id)">ID</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Game, object>(x=>x.gamename)">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Game, object>(x=>x.developer)">Developer</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Game, object>(x=>x.publisher)">Publisher</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Game, object>(x=>x.console)">Konsole</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Game, object>(x=>x.description)">Beschreibung</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Game, object>(x=>x.pegi)">PEGI</MudTableSortLabel></MudTh>
            <MudTh>Bild</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ID">@context._id</MudTd>
            <MudTd DataLabel="Gamename">@context.gamename</MudTd>
            <MudTd DataLabel="Developer">@context.developer</MudTd>
            <MudTd DataLabel="Publisher">@context.publisher</MudTd>
            <MudTd DataLabel="Konsole">@context.console</MudTd>
            <MudTd DataLabel="Beschreibung">@context.description</MudTd>
            <MudTd DataLabel="PEGI">@context.pegi</MudTd>
            <MudTd DataLabel="Image"><MudImage src="@context.imagelink" Height="150" Width="100">Bild</MudImage></MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10, 50, 100}" />
        </PagerContent>
    </MudTable>
    <MudText id="Selected" @ref="selectedText">Selected items (@selectedItems?.Count): @(selectedItems == null ? "" : Items = string.Join(",", selectedItems.OrderBy(x => x._id).Select(x => x._id)))</MudText>

    <MudButton @onclick="addToOwnList">Add to List</MudButton>
    <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
        Open Simple Dialog
    </MudButton>
}

@code {
    private Game[]? gamesn;
    private int countGames;
    private MudTable<Game> _table;
    private MudText selectedText;
    private HashSet<Game> selectedItems = new HashSet<Game>();
    String _selectedItemText;
    String Items = "Test";
    private bool _selectOnRowClick = true;

    protected override async Task OnInitializedAsync()
    {
        gamesn = await client.GetFromJsonAsync<Game[]>("http://localhost:5000/getall");
    }

    public void addToOwnList()
    {
        Console.WriteLine(Items);

    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<Dialog>("Geben sie ihren Benutzernamen ein:", new DialogParameters { { "Items", Items } }, options);
    }

    void OnRowClick(TableRowClickEventArgs<Game> args)
    {
        _selectedItemText = $"{args.Item.gamename} ({args.Item._id})";
    }


    public class Game
    {
        public int _id { get; set; }
        public string gamename { get; set; }
        public string developer { get; set; }
        public string publisher { get; set; }
        public string console { get; set; }
        public string description { get; set; }
        public int pegi { get; set; }
        public string imagelink { get; set; }
    }
}
